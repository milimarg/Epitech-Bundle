on:
    push:
        branches-ignore:
            - "ga-ignore-*"
    pull_request:
        branches-ignore:
            - "ga-ignore-*"

env:
    MIRROR_URL: "git@github.com:EpitechPromo2027/B-DOP-200-STG-2-1-chocolatine-florent.guittre.git"
    EXECUTABLES: "mysh"

jobs:
    check_coding_style:
        runs-on: ubuntu-latest
        container: ghcr.io/epitech/coding-style-checker:latest
        steps:
            - name: checkout
              uses: actions/checkout@v3.3.0
              with:
                  fetch-depth: 0
            - name: run script
              run: |
                  check.sh $(pwd) $(pwd)
                  if test -s $(pwd)/coding-style-reports.log; then
                      while read -r line; do
                          body=$(echo $(echo $line | grep -Eo "[MAJOR|MINOR|INFO]+") coding style error)
                          description=$(echo $line | grep -Eo "C-.*$");
                          file=$(echo $line | grep -Eo "\.([a-zA-Z0-9_/]+)\.[a-zA-Z]+");
                          line=$(echo $line | grep -Eo ":([0-9]+):" | tr -d ':');
                          echo "::error file=$file,line=$line,title=$body::$description"
                      done < $(pwd)/coding-style-reports.log
                      exit 1
                  fi
    check_program_compilation:
        needs: check_coding_style
        runs-on: ubuntu-latest
        container: epitechcontent/epitest-docker
        steps:
            - name: checkout
              uses: actions/checkout@v3.3.0
              with:
                  fetch-depth: 0
            - name: launch_make
              timeout-minutes: 2
              run: make -C $(pwd)
            - name: launch_make_clean
              run: make clean -C $(pwd)
            - name: check_executables
              run: |
                   IFS=" "
                   read -ra exec <<< "$EXECUTABLES"
                   for element in "${exec[@]}"
                   do
                       if [ ! -x $element ]; then
                           exit 1
                       fi
                   done
    run_tests:
        needs: check_program_compilation
        runs-on: ubuntu-latest
        container: epitechcontent/epitest-docker
        steps:
            - name: checkout
              uses: actions/checkout@v3.3.0
              with:
                  fetch-depth: 0
            - name: run_tests
              timeout-minutes: 2
              run: make tests_run -C $(pwd)
    push_to_mirror:
        needs: run_tests
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3.3.0
              with:
                  fetch-depth: 0
            - name: mirroring
              uses: pixta-dev/repository-mirroring-action@v1
              with:
                  target_repo_url:
                      ${{ env.MIRROR_URL }}
                  ssh_private_key:
                      ${{ secrets.GIT_SSH_PRIVATE_KEY }}
